{"version":3,"file":"static/js/532.6ee77420.chunk.js","mappings":"8SAgBO,SAAeA,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,GAAAA,IAAA,sBADlB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BC,GAA1B,uFACkBL,EAAAA,GAAAA,IAAA,gBAAmBK,IADrC,cACCJ,EADD,yBAEEA,EAASC,MAFX,kEAMA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAuBD,GAAvB,uFACkBL,EAAAA,GAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BH,GAA1B,uFACkBL,EAAAA,GAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,uFAEkBV,EAAAA,GAAAA,IAAA,8BAAiCU,IAFnD,cAECT,EAFD,yBAGAA,EAASC,KAAKC,SAHd,kEAtCPH,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBW,QAAS,mC,sGCFEC,EAAOC,EAAAA,GAAAA,GAAH,4C,SCAJC,EAAW,SAAC,GAAc,IAAZP,EAAW,EAAXA,KACvB,OACI,yBACCA,EAAKQ,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWb,EAAS,EAATA,GAC1C,OACE,UAACO,EAAD,YACE,gBACEO,IAAG,0CAAqCH,GACxCI,IAAKH,KAEP,uBAAIA,KACJ,uCAAeC,OANNb,EASd,KAIR,E,2BClBYgB,EAAYR,EAAAA,GAAAA,GAAH,yECwBtB,EApBa,WACX,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOf,EAAP,KAAagB,EAAb,KACQlB,GAAOmB,EAAAA,EAAAA,MAAPnB,GAMR,OAJAoB,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,IAAQD,GAAIqB,KAAKH,EAClB,GAAE,CAAClB,KAGF,SAACgB,EAAD,UACmB,IAAhBd,EAAKoB,QACJ,SAACb,EAAD,CAAUP,KAAMA,KAEhB,8EAIP,C","sources":["Services/API.jsx","components/CastList/CastList.styled.js","components/CastList/CastList.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '8009629a1fea118cf1b1e37731fe7687',\n};\n// первый вариант\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// export const getTrendingMovies = async() => {\n//     const response = await axios.get(`/trending/movie/day`);\n//     return response.data.results;\n//   };\n\n\n// запит варіант як в додатковому уроці\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport async function getTrendingMovies() {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n}\n\n// запрос полной информации о фильме для страницы кинофильма. \nexport async function getDetails(id) {\n  const response = await axios.get(`movie/${id}`)\n  return response.data;\n}\n\n// запрос информации о актёрском составе для страницы кинофильма.\nexport async function getCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`)\n  return response.data.cast;\n}\n\n// запрос обзоров для страницы кинофильма.\nexport async function getReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`)\n  return response.data.results;\n}\n\n// поиск кинофильма по ключевому слову на странице фильмов.\nexport async function getSearch(query) {\n  // const response = await axios.get(`/movie/search`)\n  const response = await axios.get(`/search/movie?query=${query}`)\nreturn response.data.results; \n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 15px 0;\n`;\n","import { Item } from \"./CastList.styled\";\n\nexport const CastList = ({ cast }) => {\n    return (\n        <div>\n        {cast.map(({ profile_path, name, character, id }) => {\n          return (\n            <Item key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                alt={name}\n              ></img>\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </Item>\n          );\n        })}\n      </div>\n    )\n \n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.ul`\nlist-style: none;\nborder-top: 1px solid black;\n`;\n\n","import { CastList } from 'components/CastList/CastList';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'Services/API';\nimport { Container } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getCast(id).then(setCast);\n  }, [id]);\n\n  return (\n    <Container>\n      {cast.length !== 0 ? (\n        <CastList cast={cast} />\n      ) : (\n        <p>We don't have any cast information on this movie.</p>\n      )}\n    </Container>\n  );\n};\n\n\nexport default Cast;"],"names":["getTrendingMovies","axios","response","data","results","getDetails","id","getCast","cast","getReviews","getSearch","query","api_key","Item","styled","CastList","map","profile_path","name","character","src","alt","Container","useState","setCast","useParams","useEffect","then","length"],"sourceRoot":""}
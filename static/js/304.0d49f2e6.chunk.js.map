{"version":3,"file":"static/js/304.0d49f2e6.chunk.js","mappings":"8SAQO,SAAeA,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,GAAAA,IAAA,sBADlB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BC,GAA1B,uFACkBL,EAAAA,GAAAA,IAAA,gBAAmBK,IADrC,cACCJ,EADD,yBAEEA,EAASC,MAFX,kEAMA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAuBD,GAAvB,uFACkBL,EAAAA,GAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BH,GAA1B,uFACkBL,EAAAA,GAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,uFAEkBV,EAAAA,GAAAA,IAAA,8BAAiCU,IAFnD,cAECT,EAFD,yBAGEA,EAASC,KAAKC,SAHhB,kEA9BPH,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBW,QAAS,mC,iHCDEC,EAAYC,EAAAA,GAAAA,GAAH,gUAcTC,EAAYD,EAAAA,GAAAA,GAAH,4BAKTE,EAAWF,EAAAA,GAAAA,IAAH,iIAQRG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,sLAYTK,EAAcL,EAAAA,GAAAA,GAAH,2D,SC/BXM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACV,EAAD,WACGQ,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOnB,EAAV,EAAUA,GAAIoB,EAAd,EAAcA,YAAd,OACV,SAACX,EAAD,WACE,UAACE,EAAD,CAAWU,GAAE,kBAAarB,GAAMsB,MAAO,CAAEC,KAAMP,GAA/C,WACE,SAACN,EAAD,CACEc,IAAG,0CAAqCJ,GACxCK,IAAKN,EACLO,MAAM,SAER,SAACb,EAAD,UAAcM,QAPFnB,EADN,KAYZ,SAAC,EAAA2B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,mJC/BYrB,EAAYC,EAAAA,GAAAA,QAAH,+CAITqB,EAASrB,EAAAA,GAAAA,GAAH,8D,kBCsBnB,EAvBa,WACX,OAA4BsB,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAoB,mCAAG,8GAEIvC,EAAAA,EAAAA,MAFJ,OAEnBwC,EAFmB,OAGzBH,EAAUG,GAHe,gDAKzBC,QAAQC,IAAR,MALyB,yDAAH,qDAQ1BH,GACD,GAAE,KAGD,UAAC1B,EAAD,YACE,SAACsB,EAAD,8BACA,SAACf,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C","sources":["Services/API.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '8009629a1fea118cf1b1e37731fe7687',\n};\n\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport async function getTrendingMovies() {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n}\n\n// запрос полной информации о фильме для страницы кинофильма.\nexport async function getDetails(id) {\n  const response = await axios.get(`movie/${id}`);\n  return response.data;\n}\n\n// запрос информации о актёрском составе для страницы кинофильма.\nexport async function getCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n}\n\n// запрос обзоров для страницы кинофильма.\nexport async function getReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n}\n\n// поиск кинофильма по ключевому слову на странице фильмов.\nexport async function getSearch(query) {\n  // const response = await axios.get(`/movie/search`)\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.ul`\ndisplay: grid;\n    max-width: calc(100vw - 25px);\n    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    padding-top: 15px;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const ItemMovie = styled.li`\n\n\n`;\n\nexport const ImgMovie = styled.img`\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover {\n  transform: scale(1.03);\n    \n}\n`;\n\nexport const LinkMovie = styled(Link)`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntext-decoration: none;\ncolor: black;\n:hover {\n   color: orangered;\n   font-size: 20px;\n}\n`;\n\nexport const TitlleMovie = styled.h2`\nmargin: 10px 0;\nfont-size: 15px;\n`;","import { Suspense } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport {\n  Container,\n  ItemMovie,\n  LinkMovie,\n  ImgMovie,\n  TitlleMovie,\n} from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(({ title, id, poster_path }) => (\n        <ItemMovie key={id}>\n          <LinkMovie to={`/movies/${id}`} state={{ from: location }}>\n            <ImgMovie\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n              width=\"200\"\n            />\n            <TitlleMovie>{title}</TitlleMovie>\n          </LinkMovie>\n        </ItemMovie>\n      ))}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  padding: 20px 20px;\n`;\n\nexport const Titlle = styled.h1`\nmargin: 10px 0;\ntext-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'Services/API';\nimport { Container, Titlle } from './Home.styled';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const renderTrendingMovies = async () => {\n      try {\n        const trendingMovies = await getTrendingMovies();\n        setMovies(trendingMovies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    renderTrendingMovies();\n  }, []);\n\n  return (\n    <Container>\n      <Titlle>Trending Today</Titlle>\n      <MoviesList movies={movies} />\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["getTrendingMovies","axios","response","data","results","getDetails","id","getCast","cast","getReviews","getSearch","query","api_key","Container","styled","ItemMovie","ImgMovie","LinkMovie","Link","TitlleMovie","MoviesList","movies","location","useLocation","map","title","poster_path","to","state","from","src","alt","width","Suspense","fallback","Titlle","useState","setMovies","useEffect","renderTrendingMovies","trendingMovies","console","log"],"sourceRoot":""}
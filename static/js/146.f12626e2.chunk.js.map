{"version":3,"file":"static/js/146.f12626e2.chunk.js","mappings":"8SAgBO,SAAeA,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,GAAAA,IAAA,sBADlB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BC,GAA1B,uFACkBL,EAAAA,GAAAA,IAAA,gBAAmBK,IADrC,cACCJ,EADD,yBAEEA,EAASC,MAFX,kEAMA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAuBD,GAAvB,uFACkBL,EAAAA,GAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BH,GAA1B,uFACkBL,EAAAA,GAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,uFAEkBV,EAAAA,GAAAA,IAAA,8BAAiCU,IAFnD,cAECT,EAFD,yBAGAA,EAASC,KAAKC,SAHd,kEAtCPH,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBW,QAAS,mC,wJCFEC,EAASC,EAAAA,GAAAA,OAAH,2GAQNC,EAAYD,EAAAA,GAAAA,IAAH,yEAKTE,EAAgBF,EAAAA,GAAAA,IAAH,iEAIbG,EAAWH,EAAAA,GAAAA,IAAH,uCAIRI,EAA0BJ,EAAAA,GAAAA,IAAH,6DAMvBK,EAASL,EAAAA,GAAAA,GAAH,8DAKNM,EAAgBN,EAAAA,GAAAA,GAAH,0CAIbO,EAAcP,EAAAA,GAAAA,EAAH,4CAKXQ,EAAeR,EAAAA,GAAAA,EAAH,4C,SCyCzB,EApEsB,WACpB,OAA8BS,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQnB,GAAOoB,EAAAA,EAAAA,MAAPpB,GACFqB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,YACR5B,EAAAA,EAAAA,IAAWC,GAAI4B,KAAKT,EACrB,GAAE,CAACnB,IAEJyB,QAAQC,IAAIR,GAMZ,OACE,gCACGA,IACC,4BACE,UAACX,EAAD,CACEsB,QAAS,0BAAMR,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUO,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAxC,EACTC,KAAK,SAFP,UAIG,IAJH,gBAOA,UAACvB,EAAD,YACE,SAACE,EAAD,CACEsB,IAAG,0CAAqCf,EAAQgB,aAChDC,IAAKjB,EAAQkB,MACbC,MAAM,SAER,UAAC3B,EAAD,YACE,UAACG,EAAD,WACGK,EAAQkB,MADX,KAtBO,IAAIE,KAAJ,UAAYpB,EAAQqB,eAAgBC,cAsB3C,QAGA,UAACzB,EAAD,0BAxBY0B,KAAKC,MAAL,UAAcxB,EAAQyB,eAwBlC,QACA,SAAC7B,EAAD,wBACA,SAACC,EAAD,UAAcG,EAAQ0B,YACtB,SAAC9B,EAAD,6BACA,SAACC,EAAD,UA3BSG,EAAQ2B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,kBAgC9D,UAACrC,EAAD,YACE,SAACI,EAAD,sCAEF,2BACI,yBACE,SAAC,KAAD,CAAMkC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,yCAApB,UACA,SAAC,KAAD,WAOP,C","sources":["Services/API.jsx","pages/MoviesDetails/MoviesDetails.styled..js","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '8009629a1fea118cf1b1e37731fe7687',\n};\n// первый вариант\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// export const getTrendingMovies = async() => {\n//     const response = await axios.get(`/trending/movie/day`);\n//     return response.data.results;\n//   };\n\n\n// запит варіант як в додатковому уроці\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport async function getTrendingMovies() {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n}\n\n// запрос полной информации о фильме для страницы кинофильма. \nexport async function getDetails(id) {\n  const response = await axios.get(`movie/${id}`)\n  return response.data;\n}\n\n// запрос информации о актёрском составе для страницы кинофильма.\nexport async function getCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`)\n  return response.data.cast;\n}\n\n// запрос обзоров для страницы кинофильма.\nexport async function getReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`)\n  return response.data.results;\n}\n\n// поиск кинофильма по ключевому слову на странице фильмов.\nexport async function getSearch(query) {\n  // const response = await axios.get(`/movie/search`)\n  const response = await axios.get(`/search/movie?query=${query}`)\nreturn response.data.results; \n}\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\nmargin: 20px;\nheight: 30px;\ncolor: tomato;\nfont-weight: 600;\nfont-size: 14px;\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\nborder-bottom: 1px solid black;\n`;\n\nexport const ContainerInfo = styled.div`\ndisplay: flex;\nflex-direction: column;\n`;\nexport const ImgMovie = styled.img`\nmargin: 15px;\n`;\n\nexport const ContainerAdditionalInfo = styled.div`\nborder-bottom: 1px solid black;\n\n\n`;\n\nexport const Titlle = styled.h2`\nfont-size: 24px;\npadding-top: 15px;\n`;\n\nexport const TitlleDetails = styled.h3`\nfont-size: 18px;\n`;\n\nexport const TextDetails = styled.p`\nfont-size: 14px;\n\n`;\n\nexport const TextAddition = styled.p`\npadding-left: 40px\n`;\n\n\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { getDetails } from 'Services/API';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Container,\n  ContainerAdditionalInfo,\n  ContainerInfo,\n  ImgMovie,\n  TextAddition,\n  TextDetails,\n  Titlle,\n  TitlleDetails,\n} from './MoviesDetails.styled.';\n\nconst MoviesDetails = () => {\n  const [details, setDetails] = useState(null);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    getDetails(id).then(setDetails);\n  }, [id]);\n\n  console.log(details);\n\n  const date = () => new Date(`${details.release_date}`).getFullYear();\n  const userScore = () => Math.round(`${details.vote_average}`);\n  const genres = () => details.genres.map(genre => genre.name).join(', ');\n\n  return (\n    <>\n      {details && (\n        <div>\n          <Button\n            onClick={() => navigate(location?.state?.from ?? '/')}\n            type=\"button\"\n          >\n            {' '}\n            &#60; Go back\n          </Button>\n          <Container>\n            <ImgMovie\n              src={`https://image.tmdb.org/t/p/w500/${details.poster_path}`}\n              alt={details.title}\n              width=\"250\"\n            />\n            <ContainerInfo>\n              <Titlle>\n                {details.title} ({date()})\n              </Titlle>\n              <TextDetails>User Score: {userScore()}%</TextDetails>\n              <TitlleDetails>Overview</TitlleDetails>\n              <TextDetails>{details.overview}</TextDetails>\n              <TitlleDetails>Movie Genres:</TitlleDetails>\n              <TextDetails>{genres()}</TextDetails>\n            </ContainerInfo>\n          </Container>\n        </div>\n      )}\n      <ContainerAdditionalInfo>\n        <TextAddition>Additional Information</TextAddition>\n   \n      <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading ...</div>}>\n        <Outlet />\n        </Suspense>\n        \n\n      </ContainerAdditionalInfo>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["getTrendingMovies","axios","response","data","results","getDetails","id","getCast","cast","getReviews","getSearch","query","api_key","Button","styled","Container","ContainerInfo","ImgMovie","ContainerAdditionalInfo","Titlle","TitlleDetails","TextDetails","TextAddition","useState","details","setDetails","useParams","navigate","useNavigate","location","useLocation","console","log","useEffect","then","onClick","state","from","type","src","poster_path","alt","title","width","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","to","Suspense","fallback"],"sourceRoot":""}
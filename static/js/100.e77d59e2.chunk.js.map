{"version":3,"file":"static/js/100.e77d59e2.chunk.js","mappings":"8SAgBO,SAAeA,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,GAAAA,IAAA,sBADlB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BC,GAA1B,uFACkBL,EAAAA,GAAAA,IAAA,gBAAmBK,IADrC,cACCJ,EADD,yBAEEA,EAASC,MAFX,kEAMA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAuBD,GAAvB,uFACkBL,EAAAA,GAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BH,GAA1B,uFACkBL,EAAAA,GAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,uFAEkBV,EAAAA,GAAAA,IAAA,8BAAiCU,IAFnD,cAECT,EAFD,yBAGAA,EAASC,KAAKC,SAHd,kEAtCPH,EAAAA,GAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBW,QAAS,mC,iHCDEC,EAAYC,EAAAA,GAAAA,GAAH,gUAcTC,EAAYD,EAAAA,GAAAA,GAAH,4BAKTE,EAAWF,EAAAA,GAAAA,IAAH,iIAQRG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,sLAYTK,EAAcL,EAAAA,GAAAA,GAAH,2D,SCtCXM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBC,GAAWC,EAAAA,EAAAA,MAEhB,OACE,UAACV,EAAD,WACGQ,EAAOG,KAAI,gBAAEC,EAAF,EAAEA,MAAOnB,EAAT,EAASA,GAAIoB,EAAb,EAAaA,YAAb,OACV,SAACX,EAAD,WAEE,UAACE,EAAD,CAAWU,GAAE,kBAAarB,GAAMsB,MAAO,CAAEC,KAAMP,GAA/C,WACA,SAACN,EAAD,CAAUc,IAAG,0CAAqCJ,GAAeK,IAAKN,EAAOO,MAAM,SACnF,SAACb,EAAD,UAAcM,QAJAnB,EADN,KAWZ,SAAC,EAAA2B,SAAD,CAAUC,UAAU,wCAApB,UACA,SAAC,KAAD,QAKL,C,2FCxBYrB,E,OAAYC,GAAAA,IAAH,uC,SCATqB,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACI,SAACvB,EAAD,WACI,kBAAMuB,SAAUA,EAAhB,WACA,kBACAC,KAAK,QACLC,KAAK,UAEL,mBAAQA,KAAK,SAAb,wBAIX,E,oCCsBC,EA7Ba,WAAO,IAAD,EACnB,GAA4BC,EAAAA,EAAAA,UAAU,IAAtC,eAAOlB,EAAP,KAAemB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMhC,EAAK,UAAG+B,EAAaE,IAAI,gBAApB,QAAgC,GAkBzC,OARFC,EAAAA,EAAAA,YAAU,WACHlC,IAGLD,EAAAA,EAAAA,IAAUC,GAAOmC,KAAKN,EACvB,GAAE,CAAC7B,KAIA,6BACE,SAACwB,EAAD,CAAcC,SAhBC,SAAAW,GACnBA,EAAEC,iBACF,IAAMC,EAAmBF,EAAEG,OAAOC,SAASxC,MAAMyC,MACjDT,EAAiB,CAAChC,MAAOsC,GAC1B,IAaM5B,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,MAGpC,C","sources":["Services/API.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchMovie/SearchMovie.styled.js","components/SearchMovie/SearchMovie.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '8009629a1fea118cf1b1e37731fe7687',\n};\n// первый вариант\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// export const getTrendingMovies = async() => {\n//     const response = await axios.get(`/trending/movie/day`);\n//     return response.data.results;\n//   };\n\n\n// запит варіант як в додатковому уроці\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport async function getTrendingMovies() {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n}\n\n// запрос полной информации о фильме для страницы кинофильма. \nexport async function getDetails(id) {\n  const response = await axios.get(`movie/${id}`)\n  return response.data;\n}\n\n// запрос информации о актёрском составе для страницы кинофильма.\nexport async function getCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`)\n  return response.data.cast;\n}\n\n// запрос обзоров для страницы кинофильма.\nexport async function getReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`)\n  return response.data.results;\n}\n\n// поиск кинофильма по ключевому слову на странице фильмов.\nexport async function getSearch(query) {\n  // const response = await axios.get(`/movie/search`)\n  const response = await axios.get(`/search/movie?query=${query}`)\nreturn response.data.results; \n}\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.ul`\ndisplay: grid;\n    max-width: calc(100vw - 25px);\n    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    padding-top: 15px;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const ItemMovie = styled.li`\n\n\n`;\n\nexport const ImgMovie = styled.img`\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover {\n  transform: scale(1.03);\n    \n}\n`;\n\nexport const LinkMovie = styled(Link)`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntext-decoration: none;\ncolor: black;\n:hover {\n   color: orangered;\n   font-size: 20px;\n}\n`;\n\nexport const TitlleMovie = styled.h2`\nmargin: 10px 0;\nfont-size: 15px;\n`;","import { Suspense } from \"react\";\nimport { Outlet, useLocation } from \"react-router-dom\";\nimport { Container, ItemMovie, LinkMovie, ImgMovie, TitlleMovie } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n const location = useLocation();\n\n  return (\n    <Container>  \n      {movies.map(({title, id, poster_path}) => (\n        <ItemMovie key={id}>\n\n          <LinkMovie to={`/movies/${id}`} state={{ from: location }}>\n          <ImgMovie src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} width=\"200\"/>\n          <TitlleMovie>{title}</TitlleMovie>\n          \n          </LinkMovie>\n        </ItemMovie>\n        \n      ))}\n      <Suspense fallback={<div>Loading...</div>}>\n      <Outlet/>\n      </Suspense>\n      \n    </Container>\n  );\n};","import styled from \"styled-components\"; \n\nexport const Container = styled.div`\npadding: 15px\n`","import { Container } from \"./SearchMovie.styled\"\n\nexport const SearchMovie = ({ onSubmit }) => {\n    return (\n        <Container>\n            <form onSubmit={onSubmit}>\n            <input \n            name=\"query\"\n            type=\"text\" \n            ></input>\n            <button type=\"submit\">Search</button>\n            </form>\n        </Container>\n    )\n}","import { SearchMovie } from \"components/SearchMovie/SearchMovie\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearch } from \"Services/API\"\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState ([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? \"\";\n\n\n \n  const onFormSubmit = e => {\n    e.preventDefault();\n    const searchTitleMovie = e.target.elements.query.value;\n    setSearchParams ({query: searchTitleMovie})\n  }\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getSearch(query).then(setMovies);\n  }, [query])\n\n\n    return (\n      <main>\n        <SearchMovie  onSubmit={onFormSubmit}/>\n        {movies && <MoviesList movies={movies}/>}\n      </main>\n    );\n  };\n\n  export default Movies;"],"names":["getTrendingMovies","axios","response","data","results","getDetails","id","getCast","cast","getReviews","getSearch","query","api_key","Container","styled","ItemMovie","ImgMovie","LinkMovie","Link","TitlleMovie","MoviesList","movies","location","useLocation","map","title","poster_path","to","state","from","src","alt","width","Suspense","fallback","SearchMovie","onSubmit","name","type","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","then","e","preventDefault","searchTitleMovie","target","elements","value"],"sourceRoot":""}